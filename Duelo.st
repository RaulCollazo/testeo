'From Pharo12.0.0SNAPSHOT of 14 January 2025 [Build information: Pharo-12.0.0+SNAPSHOT.build.1552.sha.0384a4d92501c60b7505265a5e75e6c21a40a785 (64 Bit)] on 16 February 2025 at 11:21:25.68 am'!Juego subclass: #Duelo	instanceVariableNames: ''	classVariableNames: ''	package: 'TheConquist'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Duelo class	instanceVariableNames: 'temaDuelo desafianteDuelo desafiadoDuelo tableroDeDuelo morphnombre1 morphnombre2 morphTiempo1 morphTiempo2 puntosDesafiado puntosDesafiante puntosMorph1 puntosMorph2 morphImagen listaNombres nombreDelaImagen jugadorActual tiempoDesafiante tiempoDesafiado temaGanador cantidadDuelo jugadorGanador jugadorPerdedor listaparabots'!!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 06:52'!desafianteDuelo	^ desafianteDuelo! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 06:52'!desafianteDuelo: anObject	desafianteDuelo := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 06:52'!desafiadoDuelo	^ desafiadoDuelo! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 06:52'!desafiadoDuelo: anObject	desafiadoDuelo := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 15:53'!tableroDeDuelo	^ tableroDeDuelo! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 15:53'!tableroDeDuelo: anObject	tableroDeDuelo := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 16:34'!morphnombre1	^ morphnombre1! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 16:34'!morphnombre1: anObject	morphnombre1 := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 16:34'!morphnombre2	^ morphnombre2! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 16:34'!morphnombre2: anObject	morphnombre2 := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:15'!morphTiempo1	^ morphTiempo1! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:15'!morphTiempo1: anObject	morphTiempo1 := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:15'!morphTiempo2	^ morphTiempo2! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:15'!morphTiempo2: anObject	morphTiempo2 := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosDesafiado	^ puntosDesafiado! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosDesafiado: anObject	puntosDesafiado := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosDesafiante	^ puntosDesafiante! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosDesafiante: anObject	puntosDesafiante := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosMorph1	^ puntosMorph1! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosMorph1: anObject	puntosMorph1 := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosMorph2	^ puntosMorph2! !!Duelo class methodsFor: 'accessing' stamp: '2/15/2025 18:33'!puntosMorph2: anObject	puntosMorph2 := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:14'!morphImagen	^ morphImagen! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:14'!morphImagen: anObject	morphImagen := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:14'!listaNombres	^ listaNombres! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:14'!listaNombres: anObject	listaNombres := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:14'!nombreDelaImagen	^ nombreDelaImagen! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:14'!nombreDelaImagen: anObject	nombreDelaImagen := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:22'!jugadorActual	^ jugadorActual! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:22'!jugadorActual: anObject	jugadorActual := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:27'!tiempoDesafiante	^ tiempoDesafiante! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:27'!tiempoDesafiante: anObject	tiempoDesafiante := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:27'!tiempoDesafiado	^ tiempoDesafiado! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 00:27'!tiempoDesafiado: anObject	tiempoDesafiado := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 03:33'!temaDuelo	^ temaDuelo! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 03:33'!temaDuelo: anObject	temaDuelo := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 04:25'!temaGanador	^ temaGanador! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 04:25'!temaGanador: anObject	temaGanador := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:06'!cantidad	^ cantidad! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:06'!cantidad: anObject	cantidad := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:09'!cantidadDuelo	^ cantidadDuelo! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:09'!cantidadDuelo: anObject	cantidadDuelo := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:23'!jugadorGanador	^ jugadorGanador! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:23'!jugadorGanador: anObject	jugadorGanador := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:23'!jugadorPerdedor	^ jugadorPerdedor! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 05:23'!jugadorPerdedor: anObject	jugadorPerdedor := anObject! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 10:07'!listaparabots	^ listaparabots! !!Duelo class methodsFor: 'accessing' stamp: '2/16/2025 10:07'!listaparabots: anObject	listaparabots := anObject! !!Duelo class methodsFor: 'class initialization' stamp: '2/16/2025 08:07'!initialize puntosDesafiado := 0.puntosDesafiante :=0.tiempoDesafiante := 60.tiempoDesafiado := 60.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 08:20'!botonclickeado: parametro(parametro = self nombreDelaImagen) ifTrue: [	(jugadorActual = true) ifTrue: [  Transcript show: 'correcto'.self incrementarPuntosMorph1.] ifFalse: [Transcript show: 'correcto'.self incrementarPuntosMorph2.]] ifFalse: [ (jugadorActual = true) ifTrue: [self penalizaciónTiempo1] ifFalse: [self penalizaciónTiempo2 ]]! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 04:28'!controlDeTiempos    | procesoDesafiante procesoDesafiado detener  |    detener := false.     procesoDesafiante := [        [self jugadorActual and: [detener not]] whileTrue: [            (self tiempoDesafiante > 0) ifTrue: [                1 second wait.                self tiempoDesafiante: self tiempoDesafiante - 1.                self decrementarTiempo1.            ].            (self tiempoDesafiante <= 0) ifTrue: [                jugadorActual := false.                detener := true.((self tiempoDesafiado = 0) and: (self tiempoDesafiante = 0)) ifTrue:[self determinarGanador]. ((self tiempoDesafiado > 0) xor: (self tiempoDesafiante > 0)) ifTrue:[self controlDeTiempos].            ].        ].    ] fork.    procesoDesafiado := [        [(self jugadorActual not) and: [detener not]] whileTrue: [            (self tiempoDesafiado > 0) ifTrue: [                1 second wait.                self tiempoDesafiado: self tiempoDesafiado - 1.                self decrementarTiempo2.            ].            (self tiempoDesafiado <= 0) ifTrue: [                jugadorActual := true.                detener := true.((self tiempoDesafiado = 0) and: (self tiempoDesafiante = 0)) ifTrue:[self determinarGanador]. ((self tiempoDesafiado > 0) xor: (self tiempoDesafiante > 0)) ifTrue:[self controlDeTiempos].            ].        ].    ] fork.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 10:07'!crearBotones	| boton1 boton2 boton3 boton4 coleccionBotones listaParaCargarBotones |listaParaCargarBotones := OrderedCollection new.listaParaCargarBotones add: nombreDelaImagen.1 to: 3 do: [:i|listaParaCargarBotones add: (listaNombres at: i ).].listaParaCargarBotones shuffle.	boton1 := SimpleButtonMorph new.	boton1		label: (listaParaCargarBotones at: 1);		extent: 200 @ 100;		on: #mouseUp send: #value to: [self botonclickeado: (listaParaCargarBotones at: 1)];		position: 0 @ 0.	boton2 := SimpleButtonMorph new.	boton2		label: (listaParaCargarBotones at: 2);		extent: 200 @ 100;		on: #mouseUp send: #value to: [self botonclickeado: (listaParaCargarBotones at: 2)];		position: 0 @ 150.	boton3 := SimpleButtonMorph new.	boton3		label: (listaParaCargarBotones at: 3);		extent: 200 @ 100;		on: #mouseUp send: #value to: [self botonclickeado: (listaParaCargarBotones at: 3)];		position: 300 @ 0.	boton4 := SimpleButtonMorph new.	boton4		label: (listaParaCargarBotones at: 4);		extent: 200 @ 100;		on: #mouseUp send: #value to: [self botonclickeado: (listaParaCargarBotones at: 4)];		position: 300 @ 150.	coleccionBotones := Morph new.	coleccionBotones 		addMorph: boton1 ;		addMorph: boton2 ;		addMorph: boton3 ;		addMorph: boton4 .coleccionBotones position: (tableroDeDuelo extent x //2 ) - coleccionBotones extent x - 250	@ (tableroDeDuelo extent y //2 ) - coleccionBotones extent y.tableroDeDuelo addMorph: coleccionBotones.listaparabots := listaParaCargarBotones.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 00:18'!crearMorphNombres: desafianteNombre desafiadoNombre: desafiadoNombre    | text1 text2 morph1position morph2position font textMorph1 textMorph2|font := (TextFontReference toFont: (StrikeFont familyName: 'Bitmap DejaVu Sans' size: 150)).    "Crear el Morph para contener el texto del desafianteNombre"    morphnombre1 := Morph new.    morphnombre1 extent: 200 @ 75.    morphnombre1 color: Color gray.        "Crear el TextMorph para el desafianteNombre"    text1 := desafianteNombre asUppercase asText    addAttribute: font;    addAttribute: (TextColor new color: Color red).    "Centrar el texto dentro del morphnombre1"textMorph1 := TextMorph new.textMorph1 contents: text1. textMorph1 position: ((morphnombre1 extent - textMorph1 extent) // 2).    morphnombre1 addMorph: textMorph1.        "Suponiendo que tableroDeDuelo ya está definido como un ImageMorph"    "tableroDeDuelo := ImageMorph new. Esto es solo un placeholder, deberías tener ya tu tablero de duelo definido"        "Agregar morphnombre1 a tableroDeDuelo"    tableroDeDuelo addMorph: morphnombre1.        "Posicionar el morphnombre1 en la posición deseada"    morph1position := ((tableroDeDuelo extent x)) - (World width) @ ((tableroDeDuelo extent y //2 )) - (World height //2 ).    morphnombre1 position: morph1position.    "Crear el Morph para contener el texto del desafianteNombre"    morphnombre2 := Morph new.    morphnombre2 extent: 200 @ 75.    morphnombre2 color: Color gray.        "Crear el TextMorph para el desafianteNombre"    text2 := desafiadoNombre asUppercase asText    addAttribute: font;    addAttribute: (TextColor new color: Color red).    "Centrar el texto dentro del morphnombre1"textMorph2 := TextMorph new.textMorph2 contents: text2. textMorph2 position: ((morphnombre1 extent - textMorph2 extent) // 2).    morphnombre2 addMorph: textMorph2.        "Suponiendo que tableroDeDuelo ya está definido como un ImageMorph"    "tableroDeDuelo := ImageMorph new. Esto es solo un placeholder, deberías tener ya tu tablero de duelo definido"        "Agregar morphnombre1 a tableroDeDuelo"    tableroDeDuelo addMorph: morphnombre2.        "Posicionar el morphnombre1 en la posición deseada"    morph2position := ((tableroDeDuelo extent x //2 )) + (World width // 2) @ ((tableroDeDuelo extent y //2 )) - (World height //2 ) .    morphnombre2 position: morph2position.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 00:33'!crearMorphTimmer: tiempo1 timmer2: tiempo2    | text1 text2 morph1position morph2position font textMorph1 textMorph2 time1 time2|time1 := (tiempoDesafiante) asNumber.time2 := (tiempoDesafiado) asNumber.font := (TextFontReference toFont: (StrikeFont familyName: 'Bitmap DejaVu Sans' size: 150)).    "Crear el Morph para contener el texto del desafianteNombre"    morphTiempo1 := Morph new.    morphTiempo1 extent: 200 @ 75.    morphTiempo1 color: Color gray.        "Crear el TextMorph para el desafianteNombre"    text1 := (time1 asString) asText    addAttribute: font;    addAttribute: (TextColor new color: Color red).    "Centrar el texto dentro del morphnombre1"textMorph1 := TextMorph new.textMorph1 contents: text1. textMorph1 position: ((morphTiempo1 extent - textMorph1 extent) // 2).    morphTiempo1 addMorph: textMorph1.        "Suponiendo que tableroDeDuelo ya está definido como un ImageMorph"    "tableroDeDuelo := ImageMorph new. Esto es solo un placeholder, deberías tener ya tu tablero de duelo definido"        "Agregar morphnombre1 a tableroDeDuelo"    tableroDeDuelo addMorph: morphTiempo1.        "Posicionar el morphnombre1 en la posición deseada"    morph1position := morphnombre1 position x - 100  @ morphnombre1 position y + 100.    morphTiempo1 position: morph1position.    "Crear el Morph para contener el texto del desafianteNombre"    morphTiempo2 := Morph new.    morphTiempo2 extent: 200 @ 75.    morphTiempo2 color: Color gray.        "Crear el TextMorph para el desafianteNombre"    text2 := (time2 asString) asText    addAttribute: font;    addAttribute: (TextColor new color: Color red).    "Centrar el texto dentro del morphnombre1"textMorph2 := TextMorph new.textMorph2 contents: text2. textMorph2 position: ((morphTiempo2 extent - textMorph2 extent) // 2).    morphTiempo2 addMorph: textMorph2.        "Suponiendo que tableroDeDuelo ya está definido como un ImageMorph"    "tableroDeDuelo := ImageMorph new. Esto es solo un placeholder, deberías tener ya tu tablero de duelo definido"        "Agregar morphnombre1 a tableroDeDuelo"    tableroDeDuelo addMorph: morphTiempo2.        "Posicionar el morphnombre1 en la posición deseada"    morph2position := morphnombre2 position x -100 @ morphnombre2 position y + 100.    morphTiempo2 position: morph2position.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 03:37'!crearMorphimagen|imagen directoryPath fileNames nombreimagen screenWidth screenHeight |screenWidth := World width.screenHeight := World height.directoryPath := FileSystem workingDirectory / 'assets/images'/(self temaDuelo)asString.fileNames := OrderedCollection new.directoryPath entries do: [:entry |    entry isDirectory ifFalse: [fileNames add: entry name]].nombreimagen := fileNames atRandom.imagen := Form fromFileNamed:                FileSystem workingDirectory                / 'assets/images'/((self temaDuelo))asString/nombreimagen. morphImagen ifNotNil: [ tableroDeDuelo removeMorph: morphImagen ].morphImagen := ImageMorph new.morphImagen        image: imagen;        position: ((tableroDeDuelo extent x // 2) - (morphImagen width // 2))  @ ((tableroDeDuelo extent y // 2) - (morphImagen height // 2))-100.tableroDeDuelo addMorph: morphImagen.fileNames remove: nombreimagen.listaNombres := fileNames.nombreDelaImagen := nombreimagen.self crearBotones.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 00:57'!crearMorphsPuntos    | text1 text2 morph1position morph2position font textMorph1 textMorph2 puntos1 puntos2|puntos1 := puntosDesafiante asNumber.puntos2 := puntosDesafiado asNumber.font := (TextFontReference toFont: (StrikeFont familyName: 'Bitmap DejaVu Sans' size: 150)).    "Crear el Morph para contener el texto del desafianteNombre"    puntosMorph1 := Morph new.    puntosMorph1 extent: 200 @ 75.    puntosMorph1 color: Color gray.        "Crear el TextMorph para el desafianteNombre"    text1 := (puntosDesafiante asString) asText    addAttribute: font;    addAttribute: (TextColor new color: Color red).    "Centrar el texto dentro del morphnombre1"textMorph1 := TextMorph new.textMorph1 contents: text1. textMorph1 position: ((puntosMorph1 extent - textMorph1 extent) // 2).    puntosMorph1 addMorph: textMorph1.        "Suponiendo que tableroDeDuelo ya está definido como un ImageMorph"    "tableroDeDuelo := ImageMorph new. Esto es solo un placeholder, deberías tener ya tu tablero de duelo definido"        "Agregar morphnombre1 a tableroDeDuelo"    tableroDeDuelo addMorph: puntosMorph1.        "Posicionar el morphnombre1 en la posición deseada"    morph1position := morphnombre1 position x - 200  @ morphnombre1 position y + 200.    puntosMorph1 position: morph1position.    "Crear el Morph para contener el texto del desafianteNombre"    puntosMorph2 := Morph new.    puntosMorph2 extent: 200 @ 75.    puntosMorph2 color: Color gray.        "Crear el TextMorph para el desafianteNombre"    text2 := (puntosDesafiado asString) asText    addAttribute: font;    addAttribute: (TextColor new color: Color red).    "Centrar el texto dentro del morphnombre1"textMorph2 := TextMorph new.textMorph2 contents: text2. textMorph2 position: ((puntosMorph2 extent - textMorph2 extent) // 2).    puntosMorph2 addMorph: textMorph2.        "Suponiendo que tableroDeDuelo ya está definido como un ImageMorph"    "tableroDeDuelo := ImageMorph new. Esto es solo un placeholder, deberías tener ya tu tablero de duelo definido"        "Agregar morphnombre1 a tableroDeDuelo"    tableroDeDuelo addMorph: puntosMorph2.        "Posicionar el morphnombre1 en la posición deseada"    morph2position := morphnombre2 position x -200   @ morphnombre2 position y + 200.    puntosMorph2 position: morph2position.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 08:18'!decrementarTiempo1    | nuevoPunto textMorph1 font newText |    font := (TextFontReference toFont: (StrikeFont familyName: 'Bitmap DejaVu Sans' size: 150)).    "Incrementar el valor de puntosDesafiante"        "Encontrar el TextMorph dentro de puntosMorph1"    textMorph1 := morphTiempo1 submorphs detect: [:each | each isKindOf: TextMorph].        "Crear el nuevo texto con atributos"    newText := (tiempoDesafiante asString asText).    newText addAttribute: font.    newText addAttribute: (TextColor new color: Color red).        "Actualizar el contenido del TextMorph"    textMorph1 contents: newText.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 02:07'!decrementarTiempo2    | nuevoPunto textMorph1 font newText |    font := (TextFontReference toFont: (StrikeFont familyName: 'Bitmap DejaVu Sans' size: 150)).    "Incrementar el valor de puntosDesafiante"        "Encontrar el TextMorph dentro de puntosMorph1"    textMorph1 := morphTiempo2 submorphs detect: [:each | each isKindOf: TextMorph].        "Crear el nuevo texto con atributos"    newText := (tiempoDesafiado asString asText).    newText addAttribute: font.    newText addAttribute: (TextColor new color: Color red).        "Actualizar el contenido del TextMorph"    textMorph1 contents: newText.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 01:51'!dibujarDuelo| imagen barra tamañoWorld ventana  |imagen := Form fromFileNamed: (FileSystem workingDirectory / 'assets' / 'backgrounds' / 'background-duel.jpg') fullName.tableroDeDuelo := ImageMorph new.tableroDeDuelo image: imagen.tableroDeDuelo position: 0@0.barra := ScrollPane new.barra scroller addMorph: tableroDeDuelo.barra extent: 300@300."Set the scroll position to the middle"barra scrollValue: ((0.1)@ (0.2)).tamañoWorld := World extent.ventana := SystemWindow labelled: 'Duelo'.ventana addMorph: barra frame: (0@0 corner: 1@1).[    ventana        position: 0 @ 0;        extent: tamañoWorld;        borderWidth: 0.] ensure: [ ventana openInWorld ].! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 02:44'!incrementarPuntosMorph1    | nuevoPunto textMorph1 font newText |    font := (TextFontReference toFont: (StrikeFont familyName: 'Bitmap DejaVu Sans' size: 150)).    "Incrementar el valor de puntosDesafiante"    self puntosDesafiante: (self puntosDesafiante + 1).        "Encontrar el TextMorph dentro de puntosMorph1"    textMorph1 := puntosMorph1 submorphs detect: [:each | each isKindOf: TextMorph].        "Crear el nuevo texto con atributos"    newText := (self puntosDesafiante asString asText).    newText addAttribute: font.    newText addAttribute: (TextColor new color: Color red).        "Actualizar el contenido del TextMorph"    textMorph1 contents: newText.self crearMorphimagen.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 02:45'!incrementarPuntosMorph2    | nuevoPunto textMorph1 font newText |    font := (TextFontReference toFont: (StrikeFont familyName: 'Bitmap DejaVu Sans' size: 150)).    "Incrementar el valor de puntosDesafiante"    self puntosDesafiado: (self puntosDesafiado + 1).        "Encontrar el TextMorph dentro de puntosMorph1"    textMorph1 := puntosMorph2 submorphs detect: [:each | each isKindOf: TextMorph].        "Crear el nuevo texto con atributos"    newText := (self puntosDesafiado asString asText).    newText addAttribute: font.    newText addAttribute: (TextColor new color: Color red).        "Actualizar el contenido del TextMorph"    textMorph1 contents: newText.self crearMorphimagen.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 08:34'!iniciarDuelo    | jugadorDesafiado fila columna |    fila := 1.    columna := 1.    1 to: cantidadDuelo do: [ :index |         "Iteramos sobre la matriz TableroLogico"        (fila > cantidadDuelo sqrt ceiling) ifTrue: [             fila := 1.             columna := columna + 1         ].        (((TableroLogico matrizTableroLógico at: fila column: columna) tema) = (temaDuelo)) ifTrue: [             jugadorDesafiado := (TableroLogico matrizTableroLógico at: fila column: columna)        ].        fila := fila + 1.    ].self initialize.self jugadorActual: true.self dibujarDuelo.self crearMorphNombres: (Juego jugadordelTurnoActualClase nombre asString) desafiadoNombre: jugadorDesafiado nombre asString. self controlDeTiempos .self crearMorphTimmer: 10 timmer2: 10.self crearMorphsPuntos.self crearMorphimagen.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 08:13'!determinarGanador    | jugadorDesafiado fila columna |    fila := 1.    columna := 1.    1 to: cantidadDuelo do: [ :index |         "Iteramos sobre la matriz TableroLogico"        (fila > cantidadDuelo sqrt ceiling) ifTrue: [             fila := 1.             columna := columna + 1         ].        (((TableroLogico matrizTableroLógico at: fila column: columna) tema) = (temaDuelo)) ifTrue: [             jugadorDesafiado := (TableroLogico matrizTableroLógico at: fila column: columna)        ].        fila := fila + 1.    ].    (puntosDesafiante > puntosDesafiado) ifTrue: [         self jugadorGanador: Juego jugadordelTurnoActualClase.         self jugadorPerdedor: jugadorDesafiado.    ] ifFalse: [          self jugadorGanador: jugadorDesafiado.         self jugadorPerdedor: Juego jugadordelTurnoActualClase.    ].self eliminarVentanasDuelo.self ganaDesafiante: jugadorGanador desafiado: jugadorPerdedor.Juego instancia flujoPrincipalTableroYaCreado.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 08:12'!eliminarVentanasDuelo    "Elimina todas las instancias de SystemWindow etiquetadas con 'Duelo'"    SystemWindow allInstances do: [ :cadaVentana |         (cadaVentana label = 'Duelo') ifTrue: [ cadaVentana delete ].    ].! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 08:38'!penalizaciónTiempo1(tiempoDesafiante := tiempoDesafiante - 10).tiempoDesafiante <0 ifTrue:[ tiempoDesafiante := 1].self decrementarTiempo1.! !!Duelo class methodsFor: 'manageDuelos' stamp: '2/16/2025 08:30'!penalizaciónTiempo2(tiempoDesafiado := tiempoDesafiado - 10).tiempoDesafiado <0 ifTrue:[tiempoDesafiado := 1].self decrementarTiempo2.! !!Duelo class methodsFor: 'ManageJuego' stamp: '2/16/2025 07:51'!ganaDesafiante: arg1 desafiado: arg2	| tmp1 tmp2 tmp3 tmp4 tmp5 tmp6 tmp7 tmp8 fila columna |	tmp4 := cantidadDuelo sqrt ceiling.	tmp5 := cantidadDuelo sqrt ceiling.	tmp1 := 1.	tmp2 := 1.	tmp3 := nil.	tmp6 := cantidadDuelo.	tmp7 := tmp6.	tmp8 := tmp7.	1 to: tmp8 do: [ :tmp9 |		(TableroLogico matrizDeMorphs at: tmp1 column: tmp2) tema		= arg1 tema ifTrue: [			tmp3 := TableroLogico matrizDeMorphs at: tmp1 column: tmp2 ].		tmp1 := tmp1 + 1.		tmp1 > tmp4 ifTrue: [			tmp1 := 1.			tmp2 := tmp2 + 1 ] ].	1.	tmp1 := 1.	tmp2 := 1.	tmp6 := cantidadDuelo.	tmp7 := tmp6.	tmp8 := tmp7.	1 to: tmp8 do: [ :tmp9 |		tmp1 > tmp4 ifTrue: [			tmp1 := 1.			tmp2 := tmp2 + 1 ].		(TableroLogico matrizDeTemas at: tmp1 column: tmp2) = arg2 tema			ifTrue: [				TableroLogico matrizDeTemas at: tmp1 column: tmp2 put: arg1 tema.				(TableroLogico matrizDeMorphs at: tmp1 column: tmp2) tema				= arg2 tema ifTrue: [					(TableroLogico matrizDeMorphs at: tmp1 column: tmp2) tema:						arg1 tema.					(TableroLogico matrizDeMorphs at: tmp1 column: tmp2) morph						color: tmp3 morph color.					(TableroLogico matrizDeMorphs at: tmp1 column: tmp2) labelMorph						contents: arg1 tema ] ].		tmp1 := tmp1 + 1.		tmp1 > tmp4 ifTrue: [			tmp1 := 1.			tmp2 := tmp2 + 1 ] ].	1.	UIManager default inform:		'Ganó: ' , arg1 nombre , ' ' , 'tema: ' , arg1 tema.	Transcript clear.	Transcript show: ('ganó:', arg1 tema, ' ', arg1 nPC asString, ' ', 'Perdió:', ' ', arg2 tema, ' ', arg2 nPC asString).	fila := 1.	columna := 1.	1 to: cantidadDuelo do: [ :i |		(fila > cantidadDuelo sqrt ceiling) ifTrue: [ fila := 1. columna := columna + 1 ].		((TableroLogico matrizTableroLógico at: fila column: columna) nombre = arg2 nombre) ifTrue: [			TableroLogico matrizTableroLógico at: fila column: columna put: arg1		].		fila := fila + 1.	].! !!Duelo class methodsFor: 'as yet unclassified' stamp: '2/16/2025 10:27'!dueloBotNPC: desafiantex desafiado: desafiadoxself initialize.self jugadorActual: false. self jugadaBot.self dibujarDuelo.self crearMorphNombres: (desafiantex nombre asString) desafiadoNombre: (desafiadox nombre asString asString). self controlDeTiempos .self crearMorphTimmer: 10 timmer2: 10.self crearMorphsPuntos.self crearMorphimagen.! !!Duelo class methodsFor: 'as yet unclassified' stamp: '2/16/2025 11:20'!jugadaBot| proceso jugada |proceso := [    [ jugadorActual ] whileTrue: [        Transcript show: 'jugadaBot called'; cr.        Transcript show: 'Bot turn'; cr.        jugada := #(1 2 3 4 5) atRandom.        Transcript show: 'Random move: ', jugada asString; cr.self botonJugada: jugada.        1 second wait.    ]. jugadorActual inspect.]fork.! !!Duelo class methodsFor: 'as yet unclassified' stamp: '2/16/2025 11:18'!botonJugada: jugada        (jugada = 1) ifTrue: [ self botonclickeado: (listaparabots at: 1) ].        (jugada = 2) ifTrue: [ self botonclickeado: (listaparabots at: 2) ].        (jugada = 3) ifTrue: [ self botonclickeado: (listaparabots at: 3) ].        (jugada = 4) ifTrue: [ self botonclickeado: (listaparabots at: 4) ].! !Duelo initialize!